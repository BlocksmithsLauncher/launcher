name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build Linux packages
      run: |
        npm run build:linux-appimage -- --x64 --arm64
        npm run build:linux-deb -- --x64 --arm64
        npm run build:linux-rpm -- --x64 --arm64
        npm run build:linux-pacman -- --x64 --arm64
        npm run build:linux-tar -- --x64 --arm64
    
    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-packages
        path: dist/
        retention-days: 30

  build-mac:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build macOS packages
      run: |
        npm run build:mac-dmg -- --x64 --arm64
        npm run build:mac-pkg -- --x64 --arm64
        npm run build:mac-zip -- --x64 --arm64
    
    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-packages
        path: dist/
        retention-days: 30

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build Windows packages
      run: npm run build:win
    
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-packages
        path: dist/
        retention-days: 30

  release:
    needs: [build-linux, build-mac, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/linux-packages/*
          artifacts/macos-packages/*
          artifacts/windows-packages/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
